add_library(
    vgraph_obj
    OBJECT
    VGraphFlags.cpp
    VGraphService.cpp
    ClientSession.cpp
    SessionManager.cpp
    ExecutionEngine.cpp
    ExecutionContext.cpp
    ExecutionPlan.cpp
    Executor.cpp
    TraverseExecutor.cpp
    CompoundExecutor.cpp
    UseExecutor.cpp
    GoExecutor.cpp
    PipeExecutor.cpp
    DefineEdgeExecutor.cpp
    DefineTagExecutor.cpp
    AlterEdgeExecutor.cpp
    AlterTagExecutor.cpp
    DescribeTagExecutor.cpp
    DescribeEdgeExecutor.cpp
    InsertVertexExecutor.cpp
    InsertEdgeExecutor.cpp
    mock/PropertiesSchema.cpp
    mock/EdgeSchema.cpp
    mock/TagSchema.cpp
    mock/SchemaManager.cpp
    mock/StorageService.cpp
)
add_dependencies(vgraph_obj common parser_obj vgraph_thrift_obj)

add_executable(
    vgraphd
    vgraphd.cpp
    $<TARGET_OBJECTS:vgraph_obj>
    $<TARGET_OBJECTS:base_obj>
    $<TARGET_OBJECTS:vgraph_thrift_obj>
    $<TARGET_OBJECTS:time_obj>
    $<TARGET_OBJECTS:fs_obj>
    $<TARGET_OBJECTS:thread_obj>
    $<TARGET_OBJECTS:parser_obj>
)

target_link_libraries(
    vgraphd
    ${THRIFT_LIBRARIES}
    wangle
    folly
    boost_system
    boost_context
    ${OPENSSL_LIBRARIES}
    ${KRB5_LIBRARIES}
    glog
    gflags
    event
    ${COMPRESSION_LIBRARIES}
    resolv
    double-conversion
    dl
    -pthread
)

add_subdirectory(test)
