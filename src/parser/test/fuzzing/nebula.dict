# AFL dictionary for NGQL
# usage: ./parser_fuzzer -dict=nebula.dict
#
# Copyright (c) 2019 vesoft inc. All rights reserved.
# 
# This source code is licensed under Apache 2.0 License,
# attached with Common Clause Condition 1.0, found in the LICENSES directory.
 

function_abs=" abbs(1)"
function_floor=" floor(1.1)"
function_ceil=" ceil(1.1)"
function_round=" round(1, 1)"
function_sqrt=" sqrt(1)"
function_cbrt=" cbrt(1)"
function_hypot=" hypot(1, 1)"
function_pow=" pow(1, 1)"
function_exp=" exp(1)"
function_exp2=" exp(1)"
function_log=" log(1)"
function_log2=" log2(1)"
function_log10=" log10(1)"
function_sin=" sin(1)"
function_asin=" asin(1)"
function_cos=" cos(1)"
function_acos=" acos(1)"
function_tan=" tan(1)"
function_atan=" atan(1)"
function_rand32=" rand32(1, 1)"
function_rand64=" rand64(1, 1)"
function_now=" now()"
function_strcasecmp=" strcasecmp(1, 1)"
function_lower=" lower(1)"
function_upper=" upper(1)"
function_length=" length(1)"
function_trim=" trim(1)"
function_ltrim=" ltrim(1)"
function_rtrim=" rtrim(1)"
function_left=" left(1, 1)"
function_right=" right(1, 1)"
function_substr=" substr(1,1,1)"
function_hash=" hash(1)"
function_now=" now()"

keyword_GO="GO"      
keyword_AS="AS"  
keyword_TO="TO"  
keyword_OR="OR"
keyword_AND="AND"
keyword_XOR="XOR"
keyword_USE="USE"
keyword_SET="SET"
keyword_FROM="FROM"
keyword_WHERE="WHERE"
keyword_MATCH="MATCH"
keyword_INSERT="INSERT"
keyword_VALUES="VALUES"
keyword_YIELD="YIELD"
keyword_RETURN="RETURN"
keyword_CREATE="CREATE"
keyword_DESCRIBE="DESCRIBE"
keyword_DESC="DESC"
keyword_VERTEX="VERTEX"
keyword_EDGE="EDGE"
keyword_EDGES="EDGES"
keyword_UPDATE="UPDATE"
keyword_UPSERT="UPSET"
keyword_WHEN="WHEN"
keyword_DELETE="DELETE"
keyword_FIND="FIND"
keyword_ALTER="ALTER"
keyword_STEPS="STEPS"
keyword_OVER="OVER"
keyword_UPTO="UPTO"
keyword_REVERSELY="REVERSELY"
keyword_SPACE="SPACE"
keyword_SPACES="SPACES"
keyword_INT="INT"
keyword_BIGINT="BIGINT"
keyword_DOUBLE="DOUBLE"
keyword_STRING="STRING"
keyword_BOOL="BOOL"
keyword_TAG="TAG"
keyword_TAGS="TAGS"
keyword_UNION="UNION"
keyword_INTERSECT="INTERSECT"
keyword_MINUS="MINUS"
keyword_NO="NO"
keyword_OVERWRITE="OVERWRITE"
keyword_TRUE="TRUE"
keyword_FALSE="FALSE"
keyword_SHOW="SHOW"
keyword_ADD="ADD"
keyword_HOSTS="HOSTS"
keyword_TIMESTAMP="TIMESTAMP"
keyword_PARTITION_NUM="PARTITION_NUM"
keyword_REPLICA_FACTOR="REPLICA_FACTOR"
keyword_DROP="DROP"
keyword_REMOVE="REMOVE"
keyword_IF="IF"
keyword_NOT="NOT"
keyword_EXISTS="EXISTS"
keyword_WITH="WITH"
keyword_FIRSTNAME="FIRSTNAME"
keyword_LASTNAME="LASTNAME"
keyword_EMAIL="EMAIL"
keyword_PHONE="PHONE"
keyword_USER="USER"
keyword_USERS="USERS"
keyword_PASSWORD="PASSWORD"
keyword_CHANGE="CHANGE"
keyword_ROLE="ROLE"
keyword_GOD="GOD"
keyword_ADMIN="ADMIN"
keyword_GUEST="GUEST"
keyword_GRANT="GRANT"
keyword_REVOKE="REVOKE"
keyword_ON="ON"
keyword_ROLES="ROLES"  
keyword_BY="BY"  
keyword_IN="IN"
keyword_KW_VARIABLES="VARIABLES"
keyword_TTL_DURATION="TTL_DURATION"
keyword_TTL_COL="TTL_COL"
keyword_DOWNLOAD="DOWNLOAD"
keyword_HDFS="HDFS"
keyword_ORDER="ORDER"
keyword_INGEST="INGEST"
keyword_ASC="ASC"
keyword_DISTINCT="DISTINCT"
keyword_VARIABLES="VARIABLES"
keyword_GET="GET"
keyword_GRAPH="GRAPH"
keyword_META="META"
keyword_STORAGE="STORAGE"
keyword_FETCH="FETCH"
keyword_PROP="PROP"
keyword_ALL="ALL"
keyword_BALANCE="BALANCE"
keyword_LEADER="LEADER"  
keyword_OF="OF"

operator_PLUS=" +"
operator_MINUS=" -"
operator_MUL=" *"
operator_DIV=" /"
operator_MOD=" %"
operator_NOT=" !"
operator_XOR=" ^"
operator_LT=" < "
operator_LE=" <= "
operator_GT=" > "
operator_GE=" >= "
operator_EQ=" == "
operator_NE=" != "
operator_AND=" && "
operator_OR=" || "
operator_LARROW="<-"
operator_RARROW="->"
operator_COMMA="."
operator_PIPE=" | "
operator_PIPE_START=" $$."
operator_PIPE_END=" $^."
operator_INPUT_REF=" $-."
operator_AT=" @"

RESERVE_PROPID="._id "
RESERVE_PROPSRC="._src "
RESERVE_PROPDST="._dst "
RESERVE_PROPRANK="._rank "

snippet_comment=" /* */"
snippet_semicolon=" ;"
snippet_over_star=" over * "
snippet_timestamp=" 1551331900"
snippet_ref=" a.b"
snippet_go=" go from 1 over dummy "
snippet_where=" go from 1 over dummy where "
snippet_yield=" go from 1 over dummy,like where like._id > 10 yield "
snippet_yield2=" go from 1 over dummy,like where like._id > 10 yield like.a "

