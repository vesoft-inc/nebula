# Copyright (c) 2021 vesoft inc. All rights reserved.
#
# This source code is licensed under Apache 2.0 License.

nebula_add_library(
    meta_service_handler SHARED
    MetaServiceHandler.cpp
    MetaServiceUtils.cpp
    ActiveHostsMan.cpp
    processors/parts/ListHostsProcessor.cpp
    processors/parts/ListPartsProcessor.cpp
    processors/parts/CreateSpaceProcessor.cpp
    processors/parts/CreateSpaceAsProcessor.cpp
    processors/parts/GetSpaceProcessor.cpp
    processors/parts/ListSpacesProcessor.cpp
    processors/parts/DropSpaceProcessor.cpp
    processors/parts/GetPartsAllocProcessor.cpp
    processors/parts/AlterSpaceProcessor.cpp
    processors/schema/CreateTagProcessor.cpp
    processors/schema/AlterTagProcessor.cpp
    processors/schema/GetTagProcessor.cpp
    processors/schema/ListTagsProcessor.cpp
    processors/schema/DropTagProcessor.cpp
    processors/schema/CreateEdgeProcessor.cpp
    processors/schema/AlterEdgeProcessor.cpp
    processors/schema/GetEdgeProcessor.cpp
    processors/schema/ListEdgesProcessor.cpp
    processors/schema/DropEdgeProcessor.cpp
    processors/schema/SchemaUtil.cpp
    processors/id/GetWorkerIdProcessor.cpp
    processors/index/CreateTagIndexProcessor.cpp
    processors/index/DropTagIndexProcessor.cpp
    processors/index/GetTagIndexProcessor.cpp
    processors/index/ListTagIndexesProcessor.cpp
    processors/index/CreateEdgeIndexProcessor.cpp
    processors/index/DropEdgeIndexProcessor.cpp
    processors/index/GetEdgeIndexProcessor.cpp
    processors/index/ListEdgeIndexesProcessor.cpp
    processors/service/ServiceProcessor.cpp
    processors/index/FTIndexProcessor.cpp
    processors/admin/HBProcessor.cpp
    processors/admin/AgentHBProcessor.cpp
    processors/user/AuthenticationProcessor.cpp
    processors/admin/CreateSnapshotProcessor.cpp
    processors/admin/DropSnapshotProcessor.cpp
    processors/admin/ListSnapshotsProcessor.cpp
    processors/job/BalancePlan.cpp
    processors/job/BalanceTask.cpp
    processors/admin/AdminClient.cpp
    processors/admin/SnapShot.cpp
    processors/admin/CreateBackupProcessor.cpp
    processors/admin/RestoreProcessor.cpp
    processors/admin/ListClusterInfoProcessor.cpp
    processors/admin/GetMetaDirInfoProcessor.cpp
    processors/admin/VerifyClientVersionProcessor.cpp
    processors/config/RegConfigProcessor.cpp
    processors/config/GetConfigProcessor.cpp
    processors/config/ListConfigsProcessor.cpp
    processors/config/SetConfigProcessor.cpp
    processors/job/JobManager.cpp
    processors/job/JobDescription.cpp
    processors/job/TaskDescription.cpp
    processors/job/JobStatus.cpp
    processors/job/AdminJobProcessor.cpp
    processors/job/ReportTaskProcessor.cpp
    processors/job/JobUtils.cpp
    processors/job/StorageJobExecutor.cpp
    processors/job/JobExecutor.cpp
    processors/job/MetaJobExecutor.cpp
    processors/job/SimpleConcurrentJobExecutor.cpp
    processors/job/CompactJobExecutor.cpp
    processors/job/FlushJobExecutor.cpp
    processors/job/BalanceJobExecutor.cpp
    processors/job/ZoneBalanceJobExecutor.cpp
    processors/job/DataBalanceJobExecutor.cpp
    processors/job/LeaderBalanceJobExecutor.cpp
    processors/job/RebuildJobExecutor.cpp
    processors/job/RebuildTagJobExecutor.cpp
    processors/job/RebuildEdgeJobExecutor.cpp
    processors/job/RebuildFTJobExecutor.cpp
    processors/job/StatsJobExecutor.cpp
    processors/job/GetStatsProcessor.cpp
    processors/job/ListTagIndexStatusProcessor.cpp
    processors/job/ListEdgeIndexStatusProcessor.cpp
    processors/zone/AddHostsProcessor.cpp
    processors/zone/AddHostsIntoZoneProcessor.cpp
    processors/zone/DropHostsProcessor.cpp
    processors/zone/DropZoneProcessor.cpp
    processors/zone/RenameZoneProcessor.cpp
    processors/zone/GetZoneProcessor.cpp
    processors/zone/MergeZoneProcessor.cpp
    processors/zone/DivideZoneProcessor.cpp
    processors/zone/ListZonesProcessor.cpp
    processors/listener/ListenerProcessor.cpp
    processors/session/SessionManagerProcessor.cpp
)

add_dependencies(
    meta_service_handler
    meta_version_man_obj
)

nebula_add_library(
    meta_version_man_obj SHARED
    MetaVersionMan.cpp
)

target_link_libraries(meta_service_handler PUBLIC kvstore_obj meta_client_obj meta_version_man_obj version_obj meta_keyutils_obj )
add_dependencies(
    meta_version_man_obj
    meta_v2_thrift_obj
)

set(meta_test_deps
    mock_obj
    meta_service_handler
    meta_version_man_obj
    meta_v2_thrift_obj
    meta_data_upgrade_obj
    storage_admin_service_handler
    graph_storage_service_handler
    storage_transaction_executor
    storage_client_obj
    storage_client_base_obj
    internal_storage_client_obj
    storage_common_obj
    kvstore_obj
    raftex_obj
    wal_obj
    disk_man_obj
    keyutils_obj
    meta_keyutils_obj
    log_str_list_iterator_obj
    meta_client_obj
    file_based_cluster_id_man_obj
    ws_obj
    ws_common_obj
    http_client_obj
    raftex_thrift_obj
    storage_thrift_obj
    meta_thrift_obj
    common_thrift_obj
    thrift_obj
    process_obj
    meta_obj
    stats_obj
    fs_obj
    time_obj
    network_obj
    thread_obj
    conf_obj
    codec_obj
    datatypes_obj
    base_obj
    expression_obj
    function_manager_obj
    wkt_wkb_io_obj
    agg_function_manager_obj
    time_utils_obj
    datetime_parser_obj
    ft_es_storage_adapter_obj
    version_obj
    ssl_obj
    geo_index_obj
    meta_stats_obj
    meta_client_stats_obj
    storage_client_stats_obj
    kv_stats_obj
    storage_stats_obj
)

if(ENABLE_STANDALONE_VERSION)
set(meta_test_deps
    ${meta_test_deps}
    storage_local_server_obj
)
endif()

nebula_add_subdirectory(http)
nebula_add_subdirectory(test)
nebula_add_subdirectory(upgrade)
nebula_add_subdirectory(stats)
