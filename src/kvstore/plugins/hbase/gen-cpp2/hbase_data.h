/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <array>
#include <cstddef>
#include <thrift/lib/cpp/Thrift.h>

#include "./gen-cpp2/hbase_types.h"

namespace apache { namespace hadoop { namespace hbase { namespace thrift2 { namespace cpp2 {

struct _TDeleteTypeEnumDataStorage {
  using type = TDeleteType;
  static constexpr const std::size_t size = 2;
  static constexpr const std::array<TDeleteType, 2> values = {{
    TDeleteType::DELETE_COLUMN,
    TDeleteType::DELETE_COLUMNS,
  }};
  static constexpr const std::array<folly::StringPiece, 2> names = {{
    "DELETE_COLUMN",
    "DELETE_COLUMNS",
  }};
};

}}}}} // apache::hadoop::hbase::thrift2::cpp2
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::apache::hadoop::hbase::thrift2::cpp2::TDeleteType> {
  using storage_type =  ::apache::hadoop::hbase::thrift2::cpp2::_TDeleteTypeEnumDataStorage;
};

}} // apache::thrift
namespace apache { namespace hadoop { namespace hbase { namespace thrift2 { namespace cpp2 {

struct _TDurabilityEnumDataStorage {
  using type = TDurability;
  static constexpr const std::size_t size = 4;
  static constexpr const std::array<TDurability, 4> values = {{
    TDurability::SKIP_WAL,
    TDurability::ASYNC_WAL,
    TDurability::SYNC_WAL,
    TDurability::FSYNC_WAL,
  }};
  static constexpr const std::array<folly::StringPiece, 4> names = {{
    "SKIP_WAL",
    "ASYNC_WAL",
    "SYNC_WAL",
    "FSYNC_WAL",
  }};
};

}}}}} // apache::hadoop::hbase::thrift2::cpp2
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::apache::hadoop::hbase::thrift2::cpp2::TDurability> {
  using storage_type =  ::apache::hadoop::hbase::thrift2::cpp2::_TDurabilityEnumDataStorage;
};

}} // apache::thrift
namespace apache { namespace hadoop { namespace hbase { namespace thrift2 { namespace cpp2 {

struct _TCompareOpEnumDataStorage {
  using type = TCompareOp;
  static constexpr const std::size_t size = 7;
  static constexpr const std::array<TCompareOp, 7> values = {{
    TCompareOp::LESS,
    TCompareOp::LESS_OR_EQUAL,
    TCompareOp::EQUAL,
    TCompareOp::NOT_EQUAL,
    TCompareOp::GREATER_OR_EQUAL,
    TCompareOp::GREATER,
    TCompareOp::NO_OP,
  }};
  static constexpr const std::array<folly::StringPiece, 7> names = {{
    "LESS",
    "LESS_OR_EQUAL",
    "EQUAL",
    "NOT_EQUAL",
    "GREATER_OR_EQUAL",
    "GREATER",
    "NO_OP",
  }};
};

}}}}} // apache::hadoop::hbase::thrift2::cpp2
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::apache::hadoop::hbase::thrift2::cpp2::TCompareOp> {
  using storage_type =  ::apache::hadoop::hbase::thrift2::cpp2::_TCompareOpEnumDataStorage;
};

}} // apache::thrift

