# Copyright (c) 2020 vesoft inc. All rights reserved.
#
# This source code is licensed under Apache 2.0 License.

SET(EXEC_QUERY_TEST_OBJS
    expression_obj
    network_obj
    process_obj
    graph_thrift_obj
    storage_client_base_obj
    storage_client_obj
    storage_thrift_obj
    meta_client_obj
    stats_obj
    time_obj
    meta_thrift_obj
    common_thrift_obj
    thrift_obj
    meta_obj
    thread_obj
    fs_obj
    base_obj
    memory_obj
    datatypes_obj
    wkt_wkb_io_obj
    conf_obj
    file_based_cluster_id_man_obj
    charset_obj
    function_manager_obj
    wkt_wkb_io_obj
    agg_function_manager_obj
    http_client_obj
    time_utils_obj
    datetime_parser_obj
    ft_es_graph_adapter_obj
    ws_common_obj
    version_obj
    graph_session_obj
    graph_flags_obj
    parser_obj
    validator_obj
    planner_obj
    util_obj
    scheduler_obj
    executor_obj
    idgenerator_obj
    graph_auth_obj
    expr_visitor_obj
    graph_obj
    ssl_obj
    version_obj
    graph_stats_obj
    meta_client_stats_obj
    storage_client_stats_obj
)

if(ENABLE_STANDALONE_VERSION)

nebula_add_library(
    storage_server_stub_obj SHARED
    StorageServerStub.cpp
)

set(EXEC_QUERY_TEST_OBJS
    ${EXEC_QUERY_TEST_OBJS}
    sa_test_graph_flags_obj
    storage_server_stub_obj
)
endif()

SET(EXEC_QUERY_TEST_LIBS
    ${THRIFT_LIBRARIES}
    gtest
    ${PROXYGEN_LIBRARIES}
)

nebula_add_test(
    NAME
        executor_test
    SOURCES
        TestMain.cpp
        LogicExecutorsTest.cpp
        ProjectTest.cpp
        UnwindTest.cpp
        GetNeighborsTest.cpp
        DataCollectTest.cpp
        SetExecutorTest.cpp
        FilterTest.cpp
        DedupTest.cpp
        LimitTest.cpp
        SampleTest.cpp
        SortTest.cpp
        TopNTest.cpp
        AggregateTest.cpp
        JoinTest.cpp
        BFSShortestTest.cpp
        ConjunctPathTest.cpp
        ProduceSemiShortestPathTest.cpp
        ProduceAllPathsTest.cpp
        CartesianProductTest.cpp
        AssignTest.cpp
        ShowQueriesTest.cpp
        JobTest.cpp
    LIBRARIES
        ${EXEC_QUERY_TEST_OBJS}
    LIBRARIES
        ${EXEC_QUERY_TEST_LIBS}
)
