# Copyright (c) 2020 vesoft inc. All rights reserved.
#
# This source code is licensed under Apache 2.0 License.

nebula_add_library(
    mock_schema_obj SHARED
    MockSchemaManager.cpp
    MockIndexManager.cpp
)
target_link_libraries(mock_schema_obj PUBLIC  "${Glog_LIBRARY}")

set(VALIDATOR_TEST_LIBS
    mock_schema_obj
    util_obj
    validator_obj
    expr_visitor_obj
    planner_obj
    plan_obj
    graph_flags_obj
    parser_obj
    idgenerator_obj
    graph_context_obj
    graph_auth_obj
    graph_session_obj
    expression_obj
    network_obj
    fs_obj
    time_obj
    stats_obj
    graph_stats_obj
    meta_client_stats_obj
    storage_client_stats_obj
    time_obj
    common_thrift_obj
    graph_thrift_obj
    storage_thrift_obj
    thrift_obj
    thread_obj
    datatypes_obj
    wkt_wkb_io_obj
    base_obj
    memory_obj
    meta_thrift_obj
    meta_obj
    graph_thrift_obj
    charset_obj
    meta_client_obj
    file_based_cluster_id_man_obj
    function_manager_obj
    wkt_wkb_io_obj
    agg_function_manager_obj
    conf_obj
    http_client_obj
    process_obj
    time_utils_obj
    datetime_parser_obj
    graph_obj
    ft_es_graph_adapter_obj
    ws_common_obj
    version_obj
    ssl_obj
)

if(ENABLE_STANDALONE_VERSION)
set(VALIDATOR_TEST_LIBS
    ${VALIDATOR_TEST_LIBS}
    sa_test_graph_flags_obj
)
endif()

nebula_add_test(
    NAME
        validator_test
    SOURCES
        ACLValidatorTest.cpp
        FetchVerticesTest.cpp
        FetchEdgesTest.cpp
        MockSchemaManagerTest.cpp
        QueryValidatorTest.cpp
        AdminValidatorTest.cpp
        MaintainValidatorTest.cpp
        MutateValidatorTest.cpp
        YieldValidatorTest.cpp
        GetSubgraphValidatorTest.cpp
        FindPathValidatorTest.cpp
        ValidatorTestBase.cpp
        ExplainValidatorTest.cpp
        GroupByValidatorTest.cpp
        MatchValidatorTest.cpp
        LookupValidatorTest.cpp
        SymbolsTest.cpp
    LIBRARIES
        ${VALIDATOR_TEST_LIBS}
    LIBRARIES
        gtest
        ${THRIFT_LIBRARIES}
        ${PROXYGEN_LIBRARIES}
)
