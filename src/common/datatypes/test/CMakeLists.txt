# Copyright (c) 2020 vesoft inc. All rights reserved.
#
# This source code is licensed under Apache 2.0 License.
nebula_add_test(
    NAME
        host_addr_test
    SOURCES
        HostAddrTest.cpp
)
target_link_libraries(
       host_addr_test
        PRIVATE
        datatypes_obj
        base_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)


nebula_add_test(
    NAME
        date_test
    SOURCES
        DateTest.cpp
)
target_link_libraries(
       date_test
        PRIVATE
        datatypes_obj
        base_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)



nebula_add_test(
    NAME
        value_test
    SOURCES
        ValueTest.cpp
)
target_link_libraries(
       value_test
        PRIVATE
        base_obj
        expression_obj
        datatypes_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        function_manager_obj
        agg_function_manager_obj
        time_utils_obj
        time_obj
        datetime_parser_obj
        fs_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)


nebula_add_test(
    NAME
        structural_value_test
    SOURCES
        PathTest.cpp
        EdgeTest.cpp
)
target_link_libraries(
       structural_value_test
        PRIVATE
        base_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        datatypes_obj
        function_manager_obj
        time_obj
        time_utils_obj
        datetime_parser_obj
        fs_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)

nebula_add_test(
    NAME
        data_set_test
    SOURCES
        DataSetTest.cpp
)

target_link_libraries(
      data_set_test
        PRIVATE
        base_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        datatypes_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)
nebula_add_test(
    NAME
        geography_test
    SOURCES
        GeographyTest.cpp
)
target_link_libraries(
      geography_test
        PRIVATE
        base_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        datatypes_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)

nebula_add_test(
    NAME
        value_to_json_test
    SOURCES
        ValueToJsonTest.cpp
)
target_link_libraries(
      value_to_json_test
        PRIVATE
        expression_obj
        datatypes_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        function_manager_obj
        agg_function_manager_obj
        time_utils_obj
        datetime_parser_obj
        time_obj
        fs_obj
        gtest
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)


nebula_add_executable(
    NAME
        edge_bm
    SOURCES
        EdgeBenchmark.cpp
)
target_link_libraries(
      edge_bm
        PRIVATE
        base_obj
        datatypes_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        follybenchmark
        boost_regex
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)

nebula_add_executable(
    NAME
        value_bm
    SOURCES
        ValueBenchmark.cpp
)
target_link_libraries(
      value_bm
        PRIVATE
        base_obj
        datatypes_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        follybenchmark
        boost_regex
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)
nebula_add_test(
    NAME
        geo_function_test
    SOURCES
        GeoFunctionTest.cpp
)
target_link_libraries(
     geo_function_test
        PRIVATE
        function_manager_obj
        base_obj
        datatypes_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        time_utils_obj
        datetime_parser_obj
        time_obj
        gtest
        gtest_main
        ${THRIFT_LIBRARIES}
        ${NEBULA_LIBS}
)

nebula_add_test(
    NAME
        geo_index_test
    SOURCES
        GeoIndexTest.cpp
)


target_link_libraries(
     geo_index_test
        PRIVATE
        base_obj
        datatypes_obj
        storage_thrift_obj
        meta_thrift_obj
        common_thrift_obj
        ${ROCKSDB_LIBRARIES}
        ${THRIFT_LIBRARIES}
        ${PROXYGEN_LIBRARIES}
        wangle
        gtest
        gtest_main
        ${NEBULA_LIBS}
)
