{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/vesoft-inc/nebula/src/tools/spark-sstfile-generator/mapping-schema.json",
  "title": "Nebula spark sst file generator mapping file schema",
  "description": "A mapping file which map hive tables to nebula's vertexes and edges",
  "type": "object",
  "required": [
    "database"
  ],
  "properties": {
    "database": {
      "description": "The hive database name where source data comes from",
      "type": "object",
      "required": [
        "partitions"
      ],
      "properties": {
        "key_policy": {
          "description": "Encoding algorithm used when convert business key to vertex key, only support `hash_primary_key` in so far(case-insensitive), could be omitted, or used as it's",
          "type": "string"
        },
        "partitions": {
          "description": "Graphspace's partition number,should be consistent with Nebula server side's",
          "type": "number",
          "minimum": 1
        }
      },
      "tags": {
        "description": "Vertex tags' mapping",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "table_name": {
              "description": "Tag's datasource table name",
              "type": "string"
            },
            "tag_name": {
              "description": "Tag's name",
              "type": "string"
            },
            "date_partition_key": {
              "description": "Date partition key used by datasource table",
              "type": "string"
            },
            "type_partition_key": {
              "description": "if one datasource table maps to multiple tags, which column would be used as discrimination columns",
              "type": "string"
            },
            "primary_key": {
              "description": "tag's datasource table's primary key column ",
              "type": "string"
            },
            "mappings": {
              "description": "tag's property mappings, not all columns in source table will be used as properties. When omitted, all columns will be used as its properties except those specified by primary_key,date_partition_key and type_partition_key",
              "type": "object",
              "items": {
                "tag_property_name": {
                  "name": {
                    "description": "Datasource table column's name, which hold this property's value",
                    "type": "string"
                  },
                  "\"type\"": {
                    "description": "Datasource table column's type, will be used to do type conversion to graph's native data type, default to string. The charset used default to UTF-8, could be changed through command line option '--string_value_charset_input','-hi' for short",
                    "type": "string"
                  }
                }
              },
              "required": [
                "tag_property_name"
              ]
            }
          },
          "required": [
            "table_name",
            "tag_name",
            "date_partition_key",
            "primary_key"
          ]
        },
        "minItems": 1,
        "uniqueItems": true
      },
      "edges": {
        "description": "Edges' mapping",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "table_name": {
              "description": "edge's datasource table name",
              "type": "string"
            },
            "edge_name": {
              "description": "edge's name",
              "type": "string"
            },
            "date_partition_key": {
              "description": "date partition key used by datasource table",
              "type": "string"
            },
            "type_partition_key": {
              "description": "if one datasource table maps to multiple tags, which column would be used as discrimination columns",
              "type": "string"
            },
            "from_foreign_key_column": {
              "description": "edge's FROM column",
              "type": "string"
            },
            "from_tag": {
              "description": "what edge's FROM column represent, would be used as a cross reference",
              "type": "string"
            },
            "to_foreign_key_column": {
              "description": "edge's TO column",
              "type": "string"
            },
            "to_tag": {
              "description": "what edge's TO column represent, would be used as a cross reference",
              "type": "string"
            },
            "mappings": {
              "description": "edge's property mappings,not all columns in source table will be used as properties. When omitted, all columns will be used as its properties except those specified by from_foreign_key_column,to_foreign_key_column„ÄÅdate_partition_key and type_partition_key",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "edge_property_name": {
                    "name": {
                      "description": "Datasource table column's name, which hold this property's value",
                      "type": "string"
                    },
                    "\"type\"": {
                      "description": "Datasource table column's type, will be used to do type conversion to graph's native data type, default to string. The charset used default to UTF-8, could be changed through command line option '--string_value_charset_input','-hi' for short",
                      "type": "string"
                    }
                  }
                },
                "minItems": 1,
                "uniqueItems": true
              }
            },
            "required": [
              "table_name",
              "edge_name",
              "date_partition_key",
              "from_foreign_key_column",
              "from_tag",
              "to_foreign_key_column",
              "to_tag"
            ]
          },
          "uniqueItems": true
        }
      }
    }
  }
}


