/* Copyright (c) 2020 vesoft inc. All rights reserved.
 *
 * This source code is licensed under Apache 2.0 License,
 * attached with Common Clause Condition 1.0, found in the LICENSES directory.
 */

#include <folly/String.h>

#include "version/Version.h"

#cmakedefine NEBULA_BUILD_VERSION

namespace nebula {

std::string gitInfoSha() { return "@GIT_INFO_SHA@"; }

std::string versionString(bool verbose) {
  std::string version;
#if defined(NEBULA_BUILD_VERSION)
  version = folly::stringPrintf("%s, ", "@NEBULA_BUILD_VERSION@");
#endif
  if (verbose) {
    version += folly::stringPrintf("Git: %s, ", gitInfoSha().c_str());
  }
  version += folly::stringPrintf("Build Time: %s %s", __DATE__, __TIME__);
  if (verbose) {
    version +=
        "\nThis source code is licensed under Apache 2.0 License,"
        " attached with Common Clause Condition 1.0.";
  }
  return version;
}

}  // namespace nebula
