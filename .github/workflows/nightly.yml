name: nightly

on:
  schedule:
    - cron: '0 18 * * *'

concurrency:
  group: nightly
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  package:
    name: build package
    runs-on: [self-hosted, nebula]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
          # - centos6
          - centos7
          - centos8
    container:
      image: vesoft/nebula-dev:${{ matrix.os }}
    steps:
      - uses: webiny/action-post-run@2.0.1
        with:
          run: sh -c "find . -mindepth 1 -delete"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.7'
      - name: package
        run: ./package/package.sh
      - name: output some vars
        id: vars
        env:
          SHA_EXT: sha256sum.txt
        run: |
          find pkg-build/cpack_output -type f \( -iname \*.deb -o -iname \*.rpm -o -iname \*.tar.gz \) -exec bash -c "sha256sum {} > {}.sha256sum.txt" \;
          subdir=$(date -u +%Y.%m.%d)
          echo "::set-output name=subdir::$subdir"
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: ${{ matrix.os }}-nightly
      #     path: pkg-build/cpack_output
      - uses: ./.github/actions/upload-to-oss-action
        with:
          key-id: ${{ secrets.OSS_ID }}
          key-secret: ${{ secrets.OSS_SECRET }}
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          bucket: nebula-graph
          asset-path: pkg-build/cpack_output
          target-path: package/nightly/${{ steps.vars.outputs.subdir }}

  docker:
    name: build docker image
    runs-on: [self-hosted, nebula]
    strategy:
      fail-fast: false
      matrix:
        service:
          - graphd
          - metad
          - storaged
          - tools
    steps:
      - uses: webiny/action-post-run@2.0.1
        with:
          run: sh -c "find . -mindepth 1 -delete"
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          tags: |
            vesoft/nebula-${{ matrix.service }}:nightly
          push: true

  coverage:
    name: coverage
    runs-on: [self-hosted, nebula]
    strategy:
      fail-fast: false
      matrix:
        os:
          - centos7
        compiler:
          - gcc-9.3
    container:
      image: vesoft/nebula-dev:${{ matrix.os }}
      env:
        CCACHE_DIR: /tmp/ccache/nebula/${{ matrix.os }}-${{ matrix.compiler }}
        CCACHE_MAXSIZE: 8G
      volumes:
        - /tmp/ccache/nebula/${{ matrix.os }}-${{ matrix.compiler }}:/tmp/ccache/nebula/${{ matrix.os }}-${{ matrix.compiler }}
      options: --cap-add=SYS_PTRACE
    steps:
      - uses: webiny/action-post-run@2.0.1
        with:
          run: sh -c "find . -mindepth 1 -delete"
      - uses: actions/checkout@v2
      - name: Prepare environment
        run: |
          [ -d build/ ] && rm -rf build/* || mkdir -p build
          make init -C tests
      - name: CMake
        run: |
          cmake \
              -DCMAKE_CXX_COMPILER=$TOOLSET_GCC_DIR/bin/g++ \
              -DCMAKE_C_COMPILER=$TOOLSET_GCC_DIR/bin/gcc \
              -DCMAKE_BUILD_TYPE=Debug \
              -DENABLE_TESTING=on \
              -DENABLE_COVERAGE=on \
              -GNinja \
              -B build
      - name: Make
        run: |
          ccache -z
          ninja -j $(nproc)
          ccache -s
        working-directory: build/
      - name: CTest
        env:
          ASAN_OPTIONS: fast_unwind_on_malloc=1
        run: ctest -j $(($(nproc)/2+1)) --timeout 400 --output-on-failure
        working-directory: build/
        timeout-minutes: 20
      - name: Setup cluster
        run: |
          make CONTAINERIZED=true ENABLE_SSL=true CA_SIGNED=true up
        working-directory: tests/
        timeout-minutes: 2
      - name: Pytest
        run: |
          make RM_DIR=false DEBUG=false J=8 test
        working-directory: tests/
        timeout-minutes: 15
      - name: TCK
        run: |
          make RM_DIR=false DEBUG=false J=8 tck
        working-directory: tests/
        timeout-minutes: 60
      - name: Down cluster
        run: |
          make RM_DIR=false down
        working-directory: tests/
        timeout-minutes: 2
      - name: coverage
        run: |
          ~/.local/bin/fastcov -d build -l -o fastcov.info -p --exclude /usr/include --exclude=/opt/vesoft --exclude scanner.lex
      - uses: codecov/codecov-action@v2
        with:
          files: fastcov.info
          fail_ci_if_error: false
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ${{ matrix.os }}-${{ matrix.compiler }}-nebula-test-logs
          path:  ./build/server_*/logs/
