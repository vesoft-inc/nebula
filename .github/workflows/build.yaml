name: build

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:
  build:
    name: build
    runs-on: self-hosted
    strategy:
      matrix:
        tag:
          - centos6
          - centos7
          - ubuntu1604
          - ubuntu1804
        compiler:
          - gcc
          # - clang
        exclude:
          - tag: centos6
            compiler: clang
          - tag: centos7
            compiler: clang
    container:
      image: vesoft/nebula-dev:${{ matrix.tag }}
      env:
        CCACHE_DIR: /tmp/ccache/${{ matrix.tag }}-${{ matrix.compiler }}
      options: --mount type=tmpfs,destination=/tmp/ccache,tmpfs-size=1073741824 -v /tmp/ccache/${{ matrix.tag }}-${{ matrix.compiler }}:/tmp/ccache/${{ matrix.tag }}-${{ matrix.compiler }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Prepare environment
        run: |
          [ -f "$CCACHE_DIR/ccache.conf" ] || cp ci/ccache.conf "$CCACHE_DIR"
          mkdir -p build
      - name: CMake with gcc
        if: matrix.compiler == 'gcc'
        run: cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: CMake with clang
        if: matrix.compiler == 'clang'
        run: cd build && cmake -DCMAKE_CXX_COMPILER=clang++-8 -DCMAKE_C_COMPILER=clang-8 -DENABLE_ASAN=on -DENABLE_UBSAN=on ..
        shell: bash
      - name: Make
        run: cd build && make -j $(nproc)
      - name: CTest with multiple threads
        timeout-minutes: 15
        run: cd build && ctest -j 6 --timeout 300 --output-on-failure --rerun-failed
      - name: CTest with single thread
        if: failure()
        timeout-minutes: 30
        run: cd build && ctest --timeout 300 --output-on-failure --rerun-failed
      - name: Cleanup
        if: always()
        run: rm -rf build
