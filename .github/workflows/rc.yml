name: rc

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version such as '3.1.0'"
        required: true

concurrency:
  group: rc
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  package:
    name: build package
    runs-on: [self-hosted, nebula]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
          - centos7
          - centos8
    container:
      image: vesoft/nebula-dev:${{ matrix.os }}
    env:
      BUILD_DIR: ./pkg-build
      CPACK_DIR: ./pkg-build/cpack_output
      SYMS_DIR: ./pkg-build/symbols
    steps:
      - uses: webiny/action-post-run@2.0.1
        with:
          run: sh -c "find . -mindepth 1 -delete"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.7'
      - id: tag
        run: echo ::set-output name=tagnum::${{ github.event.inputs.version }}
      - name: package
        run: ./package/package.sh -v ${{ steps.tag.outputs.tagnum }} -t RelWithDebInfo -r OFF -p ON -s TRUE -k ON
      - name: output some vars
        run: |
          tar zcf ${{ env.CPACK_DIR }}/nebula-graph-${{ steps.tag.outputs.tagnum }}.tar.gz --exclude=${{ env.BUILD_DIR }} ./*
          find ${{ env.CPACK_DIR }} -type f \( -iname \*.deb -o -iname \*.rpm -o -iname \*.tar.gz \) -exec bash -c "sha256sum {} > {}.sha256sum.txt" \;
      - uses: ./.github/actions/upload-to-oss-action
        with:
          key-id: ${{ secrets.OSS_ID }}
          key-secret: ${{ secrets.OSS_SECRET }}
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          bucket: nebula-graph
          asset-path: ${{ env.CPACK_DIR }}
          target-path: rc/${{ steps.tag.outputs.tagnum }}
      - uses: ./.github/actions/upload-to-oss-action
        with:
          key-id: ${{ secrets.OSS_ID }}
          key-secret: ${{ secrets.OSS_SECRET }}
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          bucket: nebula-graph
          asset-path: ${{ env.SYMS_DIR }}
          target-path: rc/${{ steps.tag.outputs.tagnum }}/symbols

  docker_build:
    name: docker-build
    runs-on: [self-hosted, nebula]
    strategy:
      fail-fast: false
      matrix:
        service:
          - graphd
          - metad
          - storaged
          - tools
    steps:
      - uses: webiny/action-post-run@2.0.1
        with:
          run: sh -c "find . -mindepth 1 -delete"
      - uses: actions/checkout@v2
      - id: tagname
        run: |
          echo ::set-output name=tag::"v${{ github.event.inputs.version }}"
          echo ::set-output name=tagnum::"${{ github.event.inputs.version }}"
          echo ::set-output name=majorver::"v$(echo ${{ github.event.inputs.version }} | cut -f1 -d'.')"
      - id: docker
        run: |
          majorver=$(git tag -l --sort=v:refname | tail -n1 | cut -f1 -d".")
          tag=""
          if [[ $majorver == ${{ steps.tagname.outputs.majorver }} ]]; then
            tag="${{ secrets.HARBOR_REGISTRY }}/vesoft/nebula-${{ matrix.service }}:latest"
          fi
          echo "::set-output name=tag::$tag"
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.HARBOR_REGISTRY }}/vesoft/nebula-${{ matrix.service }}:${{ steps.tagname.outputs.tag }}
            ${{ secrets.HARBOR_REGISTRY }}/vesoft/nebula-${{ matrix.service }}:${{ steps.tagname.outputs.majorver }}
            ${{ steps.docker.outputs.tag }}
          push: true
          build-args: |
            BRANCH=${{ steps.tagname.outputs.tag }}
            VERSION=${{ steps.tagname.outputs.tagnum }}

  test:
    name: test
    runs-on: [self-hosted, nebula]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu1804
          - ubuntu2004
          - centos7
          - centos8
        compiler:
          - gcc-9.3
    container:
      image: vesoft/nebula-dev:${{ matrix.os }}
      env:
        CCACHE_DIR: /tmp/ccache/nebula/${{ matrix.os }}-${{ matrix.compiler }}
        CCACHE_MAXSIZE: 8G
      volumes:
        - /tmp/ccache/nebula/${{ matrix.os }}-${{ matrix.compiler }}:/tmp/ccache/nebula/${{ matrix.os }}-${{ matrix.compiler }}
      options: --cap-add=SYS_PTRACE
    steps:
      - uses: webiny/action-post-run@2.0.1
        with:
          run: sh -c "find . -mindepth 1 -delete"
      - uses: actions/checkout@v2
      - name: Prepare environment
        id: prepare
        run: |
          [ -d build/ ] && rm -rf build/* || mkdir -p build
          make init -C tests
      - name: CMake
        id: cmake
        run: |
          cmake \
              -DCMAKE_BUILD_TYPE=RelWithDebInfo \
              -DENABLE_TESTING=on \
              -B build
          echo "::set-output name=j::8"
      - name: Make
        run: |
          ccache -z
          cmake --build build/ -j $(nproc)
          ccache -s
      - name: CTest
        env:
          ASAN_OPTIONS: fast_unwind_on_malloc=1
        run: ctest -j $(($(nproc)/2+1)) --timeout 400 --output-on-failure
        working-directory: build/
        timeout-minutes: 20
      - name: Setup cluster
        run: |
          make CONTAINERIZED=true ENABLE_SSL=true CA_SIGNED=true up
        working-directory: tests/
        timeout-minutes: 2
      - name: Pytest
        run: |
          make RM_DIR=false DEBUG=false J=${{ steps.cmake.outputs.j }} test
        working-directory: tests/
        timeout-minutes: 15
      - name: TCK
        run: |
          make RM_DIR=false DEBUG=false J=${{ steps.cmake.outputs.j }} tck
        working-directory: tests/
        timeout-minutes: 60
      - name: Down cluster
        run: |
          make RM_DIR=false down
        working-directory: tests/
        timeout-minutes: 2
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ${{ matrix.os }}-${{ matrix.compiler }}-nebula-test-logs
          path:  ./build/server_*/logs/
